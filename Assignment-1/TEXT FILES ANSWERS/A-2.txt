Questions
---------

        1   How have if-blocks  been translated into GIMPLE  statements? Can you
            differentiate between conditional and unconditional gotos?

        2   Repeat  the  above compilation,  but  now  asking for  another  dump
            that  of  the pass  "cfg".  View  this  pass  and say  whether  this
            representation makes it easier to  read and understand GIMPLEs. Draw
            the control-flow graph  of the program A-2.c on a  piece of paper by
            looking at the CFG dump.

            Compilation : gcc-4.7.2 -c -fdump-tree-cfg A-2.c
            View result : vi -O A-2.c A-2.c.*.cfg
            
***Note***  From here  onwards we will only  look at passes from  "cfg" onwards,
            each of which uses a CFG-based representation using basic blocks.
            
            
Additional Problem
------------------

        Try to figure  out how GCC handles the  ternary operator [a ? b  : c] in
        GIMPLE.

Answers
-------

1. The If blocks are turned to gotos which are conditional and then to labels. Unconditional gotos
   are a goto by themselves on a line. Conditional gotos always have two labels
   for the taken and not-taken branches.

2. Its easy to see cf in this representation than in number lines.


Additional Answer
-----------------
Answer: It breaks it into conditional gotos, whose control flow both go into a
single BB (bb 5 in this case) for assignment to the result. This dump seems to
suggest that the CFG is not quite the SSA I am used to seeing (e.g. would expect
something like iftmp.0, iftmp.1 in the different branches and a phi-node at the
joining BB).